:root {
  /* Variables Globales */
  --fuenteHeading: "PT Sans", sans-serif;
  --fuenteParrafo: "Lora", serif;

  --primario: #784d3c;
  --blanco: #ffffff;
  --negro: #000000;
  --segundario: #643928;
  --gris: #e1e1e1;
}

html {
  box-sizing: border-box; /* Es para que el border, padding,, etc no afecte el ancho de muestro elemento */
  font-size: 62.5%; /* 1 rem = 10px */
}

*,
*:before,
*:after {
  box-sizing: inherit; /* inherit heredera del box sizing, osea, el elemento padre */
}

body {
  font-family: var(--fuenteParrafos);
  font-size: 1.6rem;
  line-height: 2; /* Interlineado, que es el espacio entre los contenido del parrafo o los versos */
}

/**Globales (elementos)**/

.contenedor {
  /* max-width: 120rem;
  width: 90%;  */
  /* Este es el ancho de la barra, que seria el 100 de toda la pagina */
  width: min(90%, 120rem); /**NUEVO EN CSS3**/
  /** Es lo mismo que el codigo de arriba (Osea el max-width y width )mas simplificado.
  /**La definicion exacta es que para el elemento a utilizar esta clase busca el valor de pixeles menor entre 90% y 1200 pixeles. 
  /**Osea ejemplo se lo ocupamos en una resolucion de 980px, los elemento de esta clase ocuparan el 90%. Mientras, sea 1500px, se ocupara 1200px ya que busca el valor menor de 90% y 1200px. **/
  margin: 0 auto;
}

/* .contenedor__footer{
  width: 100%;
  max-width: 1200rem;
  margin: 10 auto;
} */

.blog {
  margin-left: 1rem;
}

.sidebar {
  margin-left: 1rem;
}

a {
  text-decoration: none; /* Quitamos el interlineado */
}

h1,
h2,
h3,
h4 {
  font-family: var(--fuenteHeading);
  line-height: 1.2;
}

h1 {
  font-size: 4.8rem;
}

h2 {
  font-size: 4rem;
}

h3 {
  font-size: 3.2rem;
}

h4 {
  font-size: 2.8rem;
}

img {
  max-width: 100%;
}

/**Utilidades o modificadores**/

.no-margin {
  margin: 0; /* Es para quitar ciertos margenes que aplica el navegador */
}

.no-padding {
  padding: 0;
}

.centrar-texto {
  text-align: center; /* Texto centrado */
}

/**Header**/

/* Esto es para cargar el banner gracias a modernizr que hace soporte a lo que falta en los otros navegadores */
.webp .header {
  background-image: url(../img/banner.webp);
}

.no-webp .header {
  background-image: url(../img/banner.jpg);
}

.header {
/*   background-image: url(../img/banner.jpg);
 */
  height: 60rem;
  background-size: cover; /* Para que tome todo el espacio disponible la imagen */
  background-repeat: no-repeat;
  background-position: center center; /* La imagen se centra horizontalmente y verticalmente */
}

.header__texto {
  text-align: center; /* Texto centrado */
  color: var(--blanco);
  margin-top: 5rem;
}

@media (min-width: 768px) {
  .header__texto {
    margin-top: 15rem;
  }
}

.barra {
  padding-top: 4rem;
}

@media (min-width: 768px) {
  .barra {
    display: flex;
    justify-content: space-between; /* Ordenar el contenido orizontalmente, 
      y just.. es para tener el elemento el lado derecho y izquierdo */
    align-items: center; /* Alineamos verticalmente los contenido */
  }
}

.logo {
  padding: 2rem;
  color: var(--blanco);
}

.logo_nombre {
  font-weight: 400; /* Peso de la fuente (El tamaño) */
}

.logo__bold {
  font-weight: 700; /* Peso de la fuente (El tamaño) */
}

@media (min-width: 750px) {
  .navegacion {
    display: flex;
    padding-right: 2rem;
    gap: 2rem;
  }
}

.navegacion__enlace {
  display: block; /* Se despliegan los elemento hacia abajo o horizontalmente */
  text-align: center;
  font-size: 1.8rem;
  color: var(--blanco);
}

/** No se si es buena practica haber echo esto en vez de utilizar una utilidad o modificador ??? Pero funciona :) **/
@media (max-width: 750px) {
  .navegacion__enlace {
    background-image: linear-gradient(
      to top,
      var(--segundario),
      var(--primario) 90%
    );
    padding: 0.5rem;
  }
}

@media (min-width: 768px) {
  .contenido-principal {
    display: grid;
    grid-template-columns: 2fr 1fr;
    column-gap: 4rem;
  }
}

.entrada {
  border-bottom: 1px solid var(--gris); /* Se crea borde de color gris */
  margin-bottom: 2rem;
}

.entrada:last-of-type {
  /* En otras palabra: "A la ultima entrada quita los bordes" */
  border: none;
  margin-bottom: 0;
}

.entrada__contenido {
  padding: 2rem;
}

.boton {
  display: block;
  font-family: var(--fuenteHeading);
  color: var(--blanco);
  text-align: center;
  padding: 1rem 3rem;
  font-size: 1.8rem;
  text-transform: uppercase;
  font-weight: 700;
  margin-bottom: 2rem;
  border: none;
}

@media (min-width: 768px) {
  .boton {
    display: inline-block; /* Inline block respeta el width y el margin, en cambio inline solo no.
      Pero a un elemento inline no podemos poner un width o un margin
      . En resumen lo que hace que toma lo mejor de inline y block, y no permite poner un elemento en su lado*/
  }
}

.boton:hover {
  cursor: pointer;
}
.boton--primario {
  background-color: var(--negro);
}

.boton--secundario {
  background-color: var(--primario);
}

.cursos {
  list-style: none; /* Es para quitar las viñetas */
}

.widget-curso {
  /* Este es el bloque */
  border-bottom: 1px solid var(--gris);
  margin-bottom: 2rem;
}

.widget-curso:last-of-type {
  /* Recordar que este es un seudo selector */
  border: none;
  margin-bottom: 0;
}

/** Los 2 restante son modificadores del bloque o elemento "widget-curso" **/

.widget-curso__label {
  font-family: var(--fuenteHeading);
  font-weight: bold; /* Pone las letras en negra */
}

.widget-curso_info {
  font-weight: normal;
}

.widget-curso__label,
.widget-curso_info {
  font-family: 2rem;
}

.footer {
  background-color: var(--negro);
  padding-bottom: 3rem;
  margin-top: 4rem;
}

.navegacion__footer {
  display: block; /* Se despliegan los elemento hacia abajo o horizontalmente */
  text-align: center;
  font-size: 1.8rem;
  color: var(--blanco);
}

/**Sobre Nosotros**/

/* Con flex-box */
@media (min-width: 768px) {
  .sobre-nosotros {
    display: flex;
    justify-content: space-between; /* Otro caso en vez de ocupar gap.
    Para poner un elemento en lado izqu y derech */
    /* gap: 2rem; */
    padding: 2rem;
    margin: 2rem;
  }

  .sobre-nosotros__imagen,
  .sobre-nosotros__texto {
    flex-basis: 50%; /* Su tamaño inicial es el 50% de él */
    flex-basis: calc(50% - 1rem); /* Otro caso en vez de ocupar gap */
  }

  /**La manera con grid**/

  /* .sobre-nosotros{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    column-gap: 2rem;
  } */
}

/**Curso**/

.curso {
  padding: 3rem 0; /* Esto dice 30 pixeles arriba y abajo, izq y derecha 0 */
  border-bottom: 1px solid var(--gris);
}

@media (min-width: 768px) {
  .curso {
    display: grid;
    grid-template-columns: 1fr 2fr;
    column-gap: 2rem;
  }
}

/**NO ES UNA BUENA PRACTICA COMO DISEÑO DUPLICAR, PERO PARA ESTE CASO DE NO ESTAR SUBIENDO Y BAJANDO EL SCROLL LO PEGAMOS EN EL BLOQUE DE CURSO**/

.curso:last-of-type {
  border: none;
}

.curso__label {
  font-family: var(--fuenteHeading);
  font-weight: bold; /* Pone las letras en negra */
}

.curso_info {
  font-weight: normal;
}

.curso__label,
.curso_info {
  font-family: 2rem;
}

/**Lo agrego dado que la imagen con el parrafo de la pagina entrada no se via centrado**/

.contenedor-entrada {
  padding: 0 7rem;
}

/**Contacto**/

.contacto-bg {
  background-image: url(../img/contacto.jpg);
  height: 40rem;
  background-size: cover; /* Establece el tamaño de la imagen en bg, este caso, cubre todo el elemento o bloque la imagen*/
  background-repeat: no-repeat;
}

.formulario {
  background-color: var(--blanco);
  margin: -5rem auto; /* Margen hacia arriba. Lado derecho auto. Hacia abajo 0 y izqu auto */
  width: 95%;
  padding: 5rem;
}

.campo {
  display: flex;
  margin-bottom: 2rem;
  gap: 2rem;
}

.campo__label {
  flex: 0 0 9rem; /* Deja tamaño fijo de 9 rem */
  text-align: right;
  padding-right: 2rem;
}

.campo__field {
  flex: 1;
  border: 1px solid var(--gris);
}

.campo__field--textarea {
  /* Modificador */
  height: 20rem;
}
